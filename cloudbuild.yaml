steps:
  # Step 1: Install dependencies and run tests
  - name: 'node:20'
    entrypoint: 'npm'
    args: ['ci']
    id: 'install'
    
  - name: 'node:20'
    entrypoint: 'npm'
    args: ['run', 'lint']
    id: 'lint'
    waitFor: ['install']
    
  - name: 'node:20'
    entrypoint: 'npm'
    args: ['run', 'typecheck']
    id: 'typecheck'
    waitFor: ['install']
    
  - name: 'node:20'
    entrypoint: 'npm'
    args: ['test']
    id: 'test'
    waitFor: ['install']
    env:
      - 'CI=true'
    
  # Step 2: Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/${_IMAGE_NAME}:${SHORT_SHA}',
      '-t', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/${_IMAGE_NAME}:latest',
      '-t', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/${_IMAGE_NAME}:${_ENVIRONMENT}',
      '.'
    ]
    id: 'docker-build'
    waitFor: ['test', 'lint', 'typecheck']
    
  # Step 3: Push Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '--all-tags', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/${_IMAGE_NAME}']
    id: 'docker-push'
    waitFor: ['docker-build']
    
  # Step 4: Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args: [
      'run', 'deploy', 'expert-contacts-api-${_ENVIRONMENT}',
      '--image', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/${_IMAGE_NAME}:${SHORT_SHA}',
      '--region', '${_REGION}',
      '--platform', 'managed',
      '--allow-unauthenticated',
      '--set-env-vars', 'NODE_ENV=${_ENVIRONMENT}',
      '--set-env-vars', 'CLOUD_RUN_SERVICE_URL=https://expert-contacts-api-${_ENVIRONMENT}-${_REGION}.run.app'
    ]
    id: 'deploy'
    waitFor: ['docker-push']
    
  # Step 5: Deploy Cloud Workflow
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args: [
      'workflows', 'deploy', 'expert-sourcing-${_ENVIRONMENT}',
      '--source', 'workflows/expert-sourcing-workflow.yaml',
      '--location', '${_REGION}',
      '--service-account', 'expert-contacts-run-${_ENVIRONMENT}@${PROJECT_ID}.iam.gserviceaccount.com'
    ]
    id: 'deploy-workflow'
    waitFor: ['deploy']

# Build configuration options
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
  
# Substitutions (set via trigger or command line)
substitutions:
  _REGION: 'us-central1'
  _REPOSITORY: 'expert-contacts'
  _IMAGE_NAME: 'expert-contacts'
  _ENVIRONMENT: 'dev'  # Will be overridden by trigger

# Timeout for the entire build
timeout: '1200s'